name: CI/CD SQL Deployment with Manual Approval

on:
  push:
    branches: [ main ]
    paths: [ 'Database/**' ]  # Triggers only if files in Database folder change

jobs:
  development:
    name: Deploy to Development (Local)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sqlcmd on Ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo "/opt/mssql-tools/bin" >> $GITHUB_PATH

      - name: Run SQL script on local (development) server
        env:
          SQL_SERVER: ${{ secrets.SQL_SERVER }}
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASS: ${{ secrets.SQL_PASS }}
        run: |
          sqlcmd -S "$SQL_SERVER" -U "$SQL_USER" -P "$SQL_PASS" -i Database/setup1.sql

  production:
    name: Deploy to Production (requires approval)
    needs: development
    runs-on: ubuntu-latest
    environment:
      name: production  # This triggers approval request for the "production" environment
      url: https://your-production-server-url  # Optional

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install sqlcmd on Ubuntu
        run: |
          sudo apt-get update
          sudo apt-get install -y curl gnupg
          curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y mssql-tools unixodbc-dev
          echo "/opt/mssql-tools/bin" >> $GITHUB_PATH

      - name: Run SQL script on production server
        env:
          PROD_SQL_SERVER: ${{ secrets.PROD_SQL_SERVER }}
          PROD_SQL_USER: ${{ secrets.PROD_SQL_USER }}
          PROD_SQL_PASS: ${{ secrets.PROD_SQL_PASS }}
        run: |
          sqlcmd -S "$PROD_SQL_SERVER" -U "$PROD_SQL_USER" -P "$PROD_SQL_PASS" -i Database/setup1.sql

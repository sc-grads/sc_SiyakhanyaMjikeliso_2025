name: SQL Server Automation Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'scripts/sp_*.sql'
  workflow_dispatch:

jobs:
  setup-database:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install SQLCMD
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/msprod.list
        sudo apt-get update
        sudo apt-get install -y mssql-tools unixodbc-dev
        echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
        source ~/.bashrc

    - name: Deploy Stored Procedure
      env:
        SQL_SERVER: ${{ secrets.SQL_SERVER }}
        SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
      run: |
        echo "Deploying stored procedure..."
        sqlcmd -S "$SQL_SERVER" -U "$SQL_USERNAME" -P "$SQL_PASSWORD" \
          -i "scripts/sp_CreateAutoTestDB.sql" -b
        if [ $? -ne 0 ]; then exit 1; fi

    - name: Execute Database Setup
      env:
        SQL_SERVER: ${{ secrets.SQL_SERVER }}
        SQL_USERNAME: "Auto_user"
        SQL_PASSWORD: "SecurePassword123!"
      run: |
        echo "Executing database setup..."
        sqlcmd -S "$SQL_SERVER" -U "$SQL_USERNAME" -P "$SQL_PASSWORD" \
          -Q "EXEC sp_CreateAutoTestDB" -b
        if [ $? -ne 0 ]; then exit 1; fi

    - name: Verify Setup
      env:
        SQL_SERVER: ${{ secrets.SQL_SERVER }}
        SQL_USERNAME: "Auto_user"
        SQL_PASSWORD: "SecurePassword123!"
      run: |
        echo "Database verification:"
        sqlcmd -S "$SQL_SERVER" -U "$SQL_USERNAME" -P "$SQL_PASSWORD" \
          -Q "USE AutoTest; SELECT * FROM [user];" -W -h-1 -s "," -o users.csv
        cat users.csv

  expose-with-zrok:
    needs: setup-database
    runs-on: ubuntu-latest
    
    steps:
    - name: Install Zrok
      run: |
        curl -sL https://binaries.zrok.io/zrok | sudo tee /usr/local/bin/zrok >/dev/null
        sudo chmod +x /usr/local/bin/zrok
        zrok enable ${{ secrets.ZROK_TOKEN }}

    - name: Expose SQL Server
      run: |
        echo "Exposing SQL Server via Zrok..."
        zrok share private tcp://${{ secrets.SQL_SERVER }}:1433 \
          --basic-auth "auto_user:SecurePassword123!" \
          --headless > zrok_output.txt &
        sleep 5
        
        ZROK_URL=$(grep -o 'http://.*' zrok_output.txt)
        echo "ZROK_URL=$ZROK_URL" >> $GITHUB_ENV
        echo "SQL Server exposed at: $ZROK_URL"

    - name: Save Zrok URL
      run: |
        echo "Public SQL Server endpoint: ${{ env.ZROK_URL }}"
        echo "Connection string:"
        echo "Server=${{ env.ZROK_URL }};Database=AutoTest;User Id=Auto_user;Password=SecurePassword123!;"
